quarkus.langchain4j.log-responses=true
quarkus.langchain4j.log-requests=true
quarkus.langchain4j.timeout=60000

# Ollama Configuration
quarkus.langchain4j.ollama.chat-model.model-id=llama3.2
quarkus.langchain4j.ollama.chat-model.temperature=0.2
quarkus.langchain4j.ollama.chat-model.top-p=0.8
quarkus.langchain4j.ollama.chat-model.top-k=20
quarkus.langchain4j.ollama.chat-model.format=json
quarkus.langchain4j.ollama.chat-model.num-predict=512
quarkus.langchain4j.ollama.chat-model.seed=42

# Kafka
quarkus.flow.messaging.defaults-enabled=true

# Flow Engine Inbound CloudEvents (structured JSON)
mp.messaging.incoming.flow-in.connector=smallrye-kafka
mp.messaging.incoming.flow-in.topic=flow-in
mp.messaging.incoming.flow-in.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
mp.messaging.incoming.flow-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Flow Engine Outbound CloudEvents (structured JSON)
mp.messaging.outgoing.flow-out.connector=smallrye-kafka
mp.messaging.outgoing.flow-out.topic=flow-out
mp.messaging.outgoing.flow-out.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer
mp.messaging.outgoing.flow-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer

# Flow Engine lifecycle events (useful for telemetry/auditing)
quarkus.flow.messaging.lifecycle-enabled=true
mp.messaging.outgoing.flow-lifecycle-out.connector=smallrye-kafka
mp.messaging.outgoing.flow-lifecycle-out.topic=flow-lifecycle-out
mp.messaging.outgoing.flow-lifecycle-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.flow-lifecycle-out.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer

# Outgoing channel used by the Newsletter API resource
mp.messaging.outgoing.flow-in-outgoing.connector=smallrye-kafka
mp.messaging.outgoing.flow-in-outgoing.topic=flow-in
mp.messaging.outgoing.flow-in-outgoing.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer
mp.messaging.outgoing.flow-in-outgoing.key.serializer=org.apache.kafka.common.serialization.StringSerializer

# --- Kafka consumer for flow-out -> Newsletter WebSocket bridge ---
mp.messaging.incoming.flow-out-incoming.connector=smallrye-kafka
mp.messaging.incoming.flow-out-incoming.topic=flow-out
mp.messaging.incoming.flow-out-incoming.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
mp.messaging.incoming.flow-out-incoming.auto.offset.reset=earliest


# DEBUG events in the console
quarkus.log.category."io.quarkiverse.flow.messaging".level=DEBUG

